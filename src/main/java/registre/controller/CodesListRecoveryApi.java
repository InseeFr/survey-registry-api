/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package registre.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.context.request.NativeWebRequest;
import registre.dto.CodesListContent;
import registre.dto.MetadataDto;
import registre.dto.SearchConfig;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-07-08T13:56:08.508051800+02:00[Europe/Paris]")
@Validated
@Tag(name = "Codes List Recovery", description = "Codes List Endpoints for")
public interface CodesListRecoveryApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /codes-lists : Get all codes lists metadata
     *
     * @return List of codes list metadata (status code 200)
     */
    @Operation(
        operationId = "getAllCodesLists",
        summary = "Get all codes lists metadata",
        tags = { "Codes List Recovery" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of codes list metadata", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = MetadataDto.class)))
            })
        }
    )
    @GetMapping(
        value = "/codes-lists",
        produces = { "application/json" }
    )
    default ResponseEntity<List<MetadataDto>> getAllCodesLists(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"externalLink\" : { \"uuid\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"version\" : \"version\" }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"label\" : \"label\", \"version\" : \"version\" }, { \"externalLink\" : { \"uuid\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"version\" : \"version\" }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"label\" : \"label\", \"version\" : \"version\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

    /**
     * GET /codes-lists/{codesListId} : Get full content of a codes list
     *
     * @param codesListId  (required)
     * @return Codes list content as raw JSON (status code 200)
     */
    @Operation(
            operationId = "getCodesListById",
            summary = "Get full content of a codes list",
            tags = { "Codes List Recovery" },
            responses = {
                    @ApiResponse(
                            responseCode = "200",
                            description = "Codes list content",
                            content = @Content(
                                    mediaType = "application/json",
                                    schema = @Schema(type = "array", example = "[ { \"id\": \"code1\", \"label\": \"Label1\" } ]")
                            )
                    ),
                    @ApiResponse(
                            responseCode = "404",
                            description = "Codes list not found"
                    )
            }
    )
    @GetMapping(
            value = "/codes-lists/{codesListId}",
            produces = { "application/json" }
    )
    ResponseEntity<CodesListContent> getCodesListById(
            @Parameter(name = "codesListId", required = true, in = ParameterIn.PATH)
            @PathVariable("codesListId") UUID codesListId
    );

    /**
     * GET /codes-lists/{codesListId}/metadata : Get codes list metadata
     *
     * @param codesListId  (required)
     * @return Metadata of a codes list (status code 200)
     */
    @Operation(
        operationId = "getCodesListMetadataById",
        summary = "Get codes list metadata",
        tags = { "Codes List Recovery" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Metadata of a codes list", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MetadataDto.class))
            })
        }
    )
    @GetMapping(
        value = "/codes-lists/{codesListId}/metadata",
        produces = { "application/json" }
    )
    default ResponseEntity<MetadataDto> getCodesListMetadataById(
        @Parameter(name = "codesListId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("codesListId") UUID codesListId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"externalLink\" : { \"uuid\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"version\" : \"version\" }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"label\" : \"label\", \"version\" : \"version\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

    /**
     * GET /codes-lists/{codesListId}/search-configuration : Get search configuration
     *
     * @param codesListId (required)
     * @return Search configuration (status code 200)
     */
    @Operation(
        operationId = "getCodesListSearchConfigById",
        summary = "Get search configuration",
        tags = { "Codes List Recovery" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Search configuration", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @GetMapping(
        value = "/codes-lists/{codesListId}/search-configuration",
        produces = { "application/json" }
    )
    default ResponseEntity<SearchConfig> getCodesListSearchConfigById(
        @Parameter(name = "codesListId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("codesListId") UUID codesListId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
